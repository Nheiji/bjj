---
- name: Backup and Upload to Google Cloud Storage
  hosts: all
  gather_facts: false

  tasks:
    - include_vars:
        file: postgres-account.yaml 

    - name: Dump an existing database to a file
      delegate_to: 10.100.10.70
      community.postgresql.postgresql_db:
        login_user: "{{ login_user }}"
        login_password: "{{ login_password }}"
        name: uploads
        state: dump
        target: /tmp/database.tar
    
    - debug:
        msg: "Backup Database Ready"

    - name: Check file backup database
      delegate_to: 10.100.10.70
      command: "ls -lh /tmp/database.tar"
      register: output_ls
    - debug:
        msg: "{{ output_ls }}"

    - name: verify google-cloud-storage Python library installed
      delegate_to: localhost
      pip:
        name: google-cloud-storage
        state: present

    - name: Read file from Server Source
      delegate_to: 10.100.10.70
      slurp:
        src: /tmp/database.tar
      register: file_slurp_db

    - name: write file to temp server
      delegate_to: localhost
      copy:
        content: "{{ file_slurp_db.content | b64decode }}"
        dest: "/tmp/{{ file_slurp_db.source | basename }}"

    - name: upload backup data from temp server to bucket
      delegate_to: localhost
      google.cloud.gcp_storage_object:
        action: upload
        bucket: backupbjj
        project: "poc-ansible-bjj"
        src: "/tmp/{{ file_slurp_db.source | basename }}"
        dest: backupbjj/database-backup/database.tar
    - debug:
        msg: "Backup database sukses"

