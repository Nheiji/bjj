---
- name: Remove IAM roles only if roles match for GCP user
  hosts: localhost
  gather_facts: no
  vars:
    roles:
      - "roles/viewer"
      - "roles/editor"
      - "roles/browser"
      - "roles/owner"

  tasks:
    - name: Get current IAM policy for the project
      delegate_to: 10.100.10.70
      ansible.builtin.command:
        cmd: >
          gcloud projects get-iam-policy poc-ansible-bjj --format=json
      register: iam_policy

    - name: Ensure IAM policy is retrieved
      debug:
        msg: "Retrieved IAM policy: {{ iam_policy.stdout }}"

    - name: Remove role only if it matches
      delegate_to: 10.100.10.70
      ansible.builtin.command:
        cmd: >
          gcloud projects remove-iam-policy-binding poc-ansible-bjj
          --member="user:{{ user_email_roles }}"
          --role="{{ item }}"
      with_items: "{{ roles }}"
      when: >
        ("user:" + (user_email_roles | quote)) in
        (iam_policy.stdout | from_json).bindings | selectattr('role', 'eq', item) | map(attribute='members') | flatten()
      register: remove_results

    - name: Add IAM Role to the User
      delegate_to: 10.100.10.70
      ansible.builtin.command:
        cmd: >
          gcloud projects add-iam-policy-binding poc-ansible-bjj
          --member="user:{{ user_email_roles }}"
          --role="roles/{{ roles_access }}"
      register: add_role_result
    - debug:
        var: add_role_result.stdout

